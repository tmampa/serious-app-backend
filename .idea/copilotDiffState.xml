<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/seriousapp/serious/app/users/student/StudentRepository.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/seriousapp/serious/app/users/student/StudentRepository.java" />
              <option name="originalContent" value="package com.seriousapp.serious.app.users.student;&#10;&#10;import org.springframework.data.jpa.repository.JpaRepository;&#10;import org.springframework.data.jpa.repository.Query;&#10;import org.springframework.data.repository.query.Param;&#10;import org.springframework.stereotype.Repository;&#10;&#10;import java.util.Optional;&#10;&#10;@Repository&#10;public interface StudentRepository extends JpaRepository&lt;Student, Long&gt; {&#10;&#10;    @Query(value = &quot;&quot;&quot;&#10;            SELECT s.*, u.* &#10;            FROM students s &#10;            JOIN users u ON s.id = u.id &#10;            WHERE s.student_number = :studentNumber&#10;            &quot;&quot;&quot;, nativeQuery = true)&#10;    Optional&lt;Student&gt; findByStudentNumber(@Param(&quot;studentNumber&quot;) Long studentNumber);&#10;&#10;    @Query(value = &quot;&quot;&quot;&#10;            SELECT s.*, u.* &#10;            FROM students s &#10;            JOIN users u ON s.id = u.id &#10;            WHERE CONCAT(s.first_names, ' ', s.last_name) = :fullName&#10;            &quot;&quot;&quot;, nativeQuery = true)&#10;    Optional&lt;Student&gt; findByFullName(@Param(&quot;fullName&quot;) String fullName);&#10;&#10;    @Query(&quot;SELECT s FROM Student s JOIN s.emails e WHERE e.email = :email&quot;)&#10;    Student findByEmail(@Param(&quot;email&quot;) String email);&#10;&#10;    Student findByUsername(String username);&#10;}&#10;" />
              <option name="updatedContent" value="package com.seriousapp.serious.app.users.student;&#10;&#10;import org.springframework.data.jpa.repository.JpaRepository;&#10;import org.springframework.data.jpa.repository.Query;&#10;import org.springframework.data.repository.query.Param;&#10;import org.springframework.stereotype.Repository;&#10;&#10;import java.util.Optional;&#10;&#10;@Repository&#10;public interface StudentRepository extends JpaRepository&lt;Student, Long&gt; {&#10;&#10;    @Query(value = &quot;&quot;&quot;&#10;            SELECT s.*, u.* &#10;            FROM students s &#10;            JOIN users u ON s.id = u.id &#10;            WHERE s.student_number = :studentNumber&#10;            &quot;&quot;&quot;, nativeQuery = true)&#10;    Optional&lt;Student&gt; findByStudentNumber(@Param(&quot;studentNumber&quot;) Long studentNumber);&#10;&#10;    @Query(value = &quot;&quot;&quot;&#10;            SELECT s.*, u.* &#10;            FROM students s &#10;            JOIN users u ON s.id = u.id &#10;            WHERE CONCAT(s.first_names, ' ', s.last_name) = :fullName&#10;            &quot;&quot;&quot;, nativeQuery = true)&#10;    Optional&lt;Student&gt; findByFullName(@Param(&quot;fullName&quot;) String fullName);&#10;&#10;    @Query(&quot;SELECT s FROM Student s JOIN s.emails e WHERE e.email = :email&quot;)&#10;    Student findByEmail(@Param(&quot;email&quot;) String email);&#10;&#10;    Student findByUsername(String username);&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>